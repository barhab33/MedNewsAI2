name: update-news

on:
  workflow_dispatch: {}        # manual run button
  schedule:
    - cron: "0 */8 * * *"      # every 8 hours

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # Required
      VITE_BOLTDATABASE_URL: ${{ secrets.VITE_BOLTDATABASE_URL }}
      VITE_BOLTDATABASE_ANON_KEY: ${{ secrets.VITE_BOLTDATABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
      # Optional (summaries/images)
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Quick sanity
        shell: bash
        run: |
          set -e
          echo "Node: $(node -v)"
          echo "Repo root:"
          ls -la
          echo "scripts/:"
          ls -la scripts || true
          echo "public/:"
          ls -la public || true

      - name: Install dependencies
        shell: bash
        run: |
          set -e
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Check required secrets
        shell: bash
        run: |
          set -e
          [ -n "$VITE_BOLTDATABASE_URL" ] || { echo "❌ VITE_BOLTDATABASE_URL missing"; exit 1; }
          [ -n "$VITE_BOLTDATABASE_ANON_KEY" ] || { echo "❌ VITE_BOLTDATABASE_ANON_KEY missing"; exit 1; }
          [ -n "$SUPABASE_SERVICE_ROLE" ] || { echo "❌ SUPABASE_SERVICE_ROLE missing"; exit 1; }
          echo "✅ Required secrets present"
          echo "Optional keys:"
          for k in GEMINI_API_KEY PEXELS_API_KEY GOOGLE_API_KEY OPENAI_API_KEY ANTHROPIC_API_KEY; do
            if [ -n "${!k}" ]; then echo "  $k: yes"; else echo "  $k: no"; fi
          done

      - name: Crawl & summarize (auto-detect script)
        shell: bash
        run: |
          set -e
          FOUND=""
          CANDIDATES="\
scripts/crawl-multi-source.cjs
scripts/crawl-multi-ai.cjs
scripts/crawl-supabase.cjs
scripts/crawl.cjs
scripts/crawler.cjs
crawl-multi-source.cjs
crawl-multi-ai.cjs
crawl-supabase.cjs
crawl.cjs
crawler.cjs
index.cjs"
          for f in $CANDIDATES; do
            if [ -f "$f" ]; then
              FOUND="$f"
              break
            fi
          done
          if [ -z "$FOUND" ]; then
            echo "ℹ️ No crawler script found; skipping crawl."
          else
            echo "▶ Using crawler: $FOUND"
            node "$FOUND"
          fi

      - name: Maintenance: normalize legacy URLs & prune (if present)
        shell: bash
        run: |
          set -e
          if [ -f scripts/maint]()
